{"version":3,"sources":["components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css"],"names":["Feedback","options","statisticsPlus","map","opt","onClick","className","styles","btnStyle","uuidv4","Statistics","good","neutral","bad","total","positivePercentage","list","Notification","message","App","state","item","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2PAsBeA,EAjBE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAC3B,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,wBAAuBC,QAAS,kBAAMH,EAAeE,IAAME,UAAWC,IAAOC,SAA7E,SACGJ,GADUK,qB,gBCeNC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,oBAAGT,UAAWC,IAAOS,KAArB,mBAAkCL,KAClC,oBAAGL,UAAWC,IAAOS,KAArB,sBAAqCJ,KACrC,oBAAGN,UAAWC,IAAOS,KAArB,kBAAiCH,KACjC,oBAAGP,UAAWC,IAAOS,KAArB,oBAAmCF,IAAnC,OACA,oBAAGR,UAAWC,IAAOS,KAArB,gCAA+CD,IAA/C,aCASE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCiDEC,E,4MA9CbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPX,eAAiB,SAAAmB,GACf,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAOE,EAAUF,GAAQ,O,EAKhCG,mBAAqB,WACnB,OAAO,EAAKJ,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAG3DY,gCAAkC,WAChC,OAAS,EAAKL,MAAMT,KAAO,EAAKa,qBAAwB,KAAKE,QAAQ,I,4CAGvE,WACE,OACE,qCACE,uDACA,cAAC,EAAD,CAAUzB,QAAS,CAAC,OAAQ,UAAW,OAAQC,eAAgByB,KAAKzB,iBAEpE,4CACCyB,KAAKH,qBAAuB,GAC3B,cAAC,EAAD,CACEb,KAAMgB,KAAKP,MAAMT,KACjBC,QAASe,KAAKP,MAAMR,QACpBC,IAAKc,KAAKP,MAAMP,IAChBC,MAAOa,KAAKH,mBACZT,mBAAoBY,KAAKF,kCAIE,IAA9BE,KAAKH,sBAA8B,cAAC,EAAD,CAAcN,QAAQ,6B,GAxChDU,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.e1d2f9be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Feedback.module.css';\r\n\r\nconst Feedback = ({ options, statisticsPlus }) => {\r\n  return (\r\n    <div>\r\n      {options.map(opt => (\r\n        <button key={uuidv4()} onClick={() => statisticsPlus(opt)} className={styles.btnStyle}>\r\n          {opt}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  statisticsPlus: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p className={styles.list}>Good: {good}</p>\r\n      <p className={styles.list}>Neutral: {neutral}</p>\r\n      <p className={styles.list}>Bad: {bad}</p>\r\n      <p className={styles.list}>Total: {total()} </p>\r\n      <p className={styles.list}>Positive feedback: {positivePercentage()} % </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\n\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  statisticsPlus = item => {\n    this.setState(prevState => {\n      return {\n        [item]: prevState[item] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return ((this.state.good / this.countTotalFeedback()) * 100).toFixed(2);\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Please leave feedback</h1>\n        <Feedback options={['good', 'neutral', 'bad']} statisticsPlus={this.statisticsPlus} />\n\n        <h2>Statistics</h2>\n        {this.countTotalFeedback() > 0 && (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        )}\n\n        {this.countTotalFeedback() === 0 && <Notification message=\"No feedback given\" />}\n      </>\n    );\n  }\n}\n\n// message={'No feedback given'}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2OdYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnStyle\":\"Feedback_btnStyle__39F53\"};"],"sourceRoot":""}